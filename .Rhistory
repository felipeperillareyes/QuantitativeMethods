female <- read.table("f.txt", header = TRUE, sep = "\t")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
le <- read.table("/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
read.table("/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
female <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
View(female)
View(female)
female <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
male <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/m.txt", header = TRUE, sep = "\t")
# explore data
head(female)
head(male
# explore data
head(female)
# open data
female <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
# explore data
head(female)
```{r}
open data
open data
# open data
male <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/m.txt", header = TRUE, sep = "\t")
# explore data
head(male)
# open data
female <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
# explore data
head(female)
# open data
male <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/m.txt", header = TRUE, sep = "\t")
# explore data
head(male)
install.packages("dplyer")
library(dplyer)
install.packages("dplyr")
library(dplyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
# get package
# install.packages("dplyr")
library(dplyr)
repeated_ids_female <- female %>%
group_by(ID) %>%
filter(n() > 1)
View(repeated_ids_female)
View(repeated_ids_female)
repeated_ids_male <- male %>%
group_by(ID) %>%
filter(n() > 1)
repeated_ids_female <- female %>%
group_by(ID) %>%
summarize(count = n())
repeated_ids_female <- female %>%
group_by(ID) %>%
filter(n() > 1)
cat("Number of repeated IDs in the female dataset:", nrow(repeated_ids_female), "\n")
# Check for repeated IDs in the male dataset
repeated_ids_male <- male %>%
group_by(ID) %>%
filter(n() > 1)
cat("Number of repeated IDs in the female dataset:", nrow(repeated_ids_male), "\n")
# explore data
head(female, 3)
# explore data
head(male, 3)
View(female)
View(female)
head(female, 3) %>%
select(ID, bmi)
```{r}
head(female, 3) %>%
select(-ID)
head(female, 3) %>%
select(-ID)
head(female, 3) %>%
select(steps, bmi)
head(female, 3) %>%
select(-ID)
?select
?select
head(female, 3) %>%
select(-ID)
# head(female, 3) %>%
#   select(-ID)
head(female, 3) %>%
select(-ID)
head(female, 3) %>%
select(steps, bmi)
head(female, 3) %>%
select(-ID)
head(female, 3) %>%
select(-ID)
library(dplyr)
female %>%
mutate(StepsTimesBmi=steps*bmi)%>%
select(StepsTimesBmi=steps*bmi)%>%
head(female, 3)
library(dplyr)
female %>%
mutate(StepsTimesBmi=steps*bmi)%>%
select(StepsTimesBmi)%>%
head(female, 3)
female %>%
mutate(StepsTimesBmi=steps*bmi)%>%
select(StepsTimesBmi)%>%
head(3)
View(female)
View(female)
View(female)
View(female)
class(female)
library(dplyr)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi=steps*bmi)%>%
select(StepsTimesBmi)%>%
head(df$StepsTimesBmi,3)
library(dplyr)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi=steps*bmi)
library(dplyr)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi=steps*bmi)%>%
select(StepsTimesBmi)
female <- subset(female, select= - StepsTimesBmi)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi=female$steps*female$bmi)%>%
select(StepsTimesBmi)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi= steps * bmi)
library(dplyr)
df$StepsTimesBmi <-female %>%
mutate(StepsTimesBmi= steps * bmi)
library(dplyr)
female <-female %>%
mutate(StepsTimesBmi= steps * bmi)
head(df$StepsTimesBmi,3)
library(dplyr)
female <-female %>%
mutate(StepsTimesBmi= steps * bmi)
head(df$StepsTimesBmi,3)
library(dplyr)
female <-female %>%
mutate(StepsTimesBmi= steps * bmi)
head(female$StepsTimesBmi,3)
{r}
female <- subset(female, select= - StepsTimesBmi)
female%>%summarise(female)
summary(female)
library(dplyr)
f20_21 <- female %>%
filter(bmi>20, bmi<21)
cat("The share of female individuals with a `bmi` higher than 20 and lower than 21 is:", nrow(f20_21)/nrow(female), "%\n")
cat("The share of female individuals with a `bmi` higher than 20 and lower than 21 is:", nrow(f20_21)*100/nrow(female), "%\n")
library(dplyr)
fBMI20_Step14000 <- female %>%
filter(bmi>20, steps<14000)
cat("The share of female individuals with a `bmi` higher than 20 and less `steps` than 14000 is:", nrow(fBMI20_Step14000)*100/nrow(female), "%\n")
fBMI20_21_Step14000 <- female %>%
filter(bmi>20, bmi<21, steps<14000)
cat("the share of female individuals with a `bmi` higher than 20 and lower than 21 while at the same time having less than 14000:", nrow(fBMI20_Step14000)*100/nrow(female), "%\n")
View(male)
View(male)
male %>%
filter(ID<5, ID>800)
male %>%
filter(ID<5 | ID>800)
View(male)
View(male)
male %>%
filter(ID<5 & ID>860)
male %>%
nrow(distinct(ID))
male %>%
distinct(ID)
unique_m_IDs <- male %>%
distinct(ID)
cat("share of male IDs that are unique is:", nrow(unique_m_IDs)*100/nrow(male), "%\n")
# Max
male %>%
arrange(desc(BMI))
male %>%
arrange(desc(bmi))
male %>%
arrange(desc(bmi))
head(.)
male %>%
arrange(bmi)
```{r}
# Max
male %>%
arrange(desc(bmi))
# Min
male %>%
arrange(bmi)
```{r}
female$sex <- 'F'
View(female)
View(male)
View(male)
male$sex <- 'M'
View(male)
View(male)
library(dplyr)
in_both <- inner_join(female, male, by="ID")
cat("The number of cases where an ID is in both data sets is:", nrow(in_both), "\n")
View(in_both)
View(in_both)
library(dplyr)
all <- full_join(female, male, by="ID")
cat("The new dataframe has ", nrow(all), "individuals\n")
# Install and load the ggplot2 package if you haven't already
install.packages("ggplot2")
library(ggplot2)
# Assuming you have a consolidated dataset named 'combined_data'
# Create a scatterplot of steps vs bmi
ggplot(combined_data, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
install.packages("ggplot2")
library(ggplot2)
# Assuming you have a consolidated dataset named 'combined_data'
# Create a scatterplot of steps vs bmi
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
install.packages("ggplot2")
# Create a scatterplot of steps vs bmi
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
library(ggplot2)
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
library(ggplot2)
# Assuming you have a consolidated dataset named 'combined_data'
# Create a scatterplot of steps vs bmi
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
View(all)
library(dplyr)
all <- full_join(female, male, by="ID", copy=FALSE)
cat("The new dataframe has ", nrow(all), "individuals\n")
library(ggplot2)
# Assuming you have a consolidated dataset named 'combined_data'
# Create a scatterplot of steps vs bmi
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
View(all)
rm(all)
library(dplyr)
all <- full_join(female, male, by="ID", copy=FALSE)
cat("The new dataframe has ", nrow(all), "individuals\n")
View(all)
View(all)
all <- bind_rows(female, male, .id = NULL)
View(all)
all <- bind_rows(female, male, .id = sex2)
all <- bind_rows(female, male)
# open data
female <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/f.txt", header = TRUE, sep = "\t")
# open data
male <- read.table("~/Documents/0_IPZ/2023_2/Leemann-QuantMethods/QuantitativeMethods/QuantitativeMethods/Data/m.txt", header = TRUE, sep = "\t")
all <- bind_rows(female, male)
View(all)
View(all)
View(all)
all <- bind_rows(female, male, .id = 'sex')
View(all)
rm(all)
all <- bind_rows(female, male, .id = 'Source')
View(all)
View(all)
all <- bind_rows(female, male, .id = NULL)
View(all)
View(all)
View(all)
all <- bind_rows(female, male, .id = 'sex')
all$sex <- ifelse(all$sex == 1, 'F', ifelse(all$sex == 2, 'M', all$sex))
View(all)
View(all)
library(ggplot2)
# Assuming you have a consolidated dataset named 'combined_data'
# Create a scatterplot of steps vs bmi
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
scale_color_manual(values = c("1" = "blue", "2" = "red"))
ggplot(all, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI")
scale_color_manual(values = c("F" = "blue", "M" = "red"))
View(all)
View(all)
ggplot(all, aes(x = steps, y = bmi, color = factor(sex))) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex") +
scale_color_manual(values = c("1" = "blue", "2" = "red"))  # Optional: Define color mapping
ggplot(all, aes(x = steps, y = bmi, color = factor(sex))) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex") +
scale_color_manual(values = c("1" = "blue", "2" = "red"))  # Optional: Define color mapping
ggplot(all, aes(x = steps, y = bmi, color = factor(sex))) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex") +
scale_color_manual(values = c("F" = "blue", "M" = "red"))  # Optional: Define color mapping
ggplot(all, aes(x = steps, y = bmi, color = sex)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex") +
scale_color_manual(values = c("F" = "blue", "M" = "red"))  # Optional: Define color mapping
ggplot(female, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex")
ggplot(male, aes(x = steps, y = bmi)) +
geom_point() +
labs(x = "Steps", y = "BMI") +
ggtitle("Scatterplot of Steps vs BMI by Sex")
male %>%
head(arrange(desc(bmi)), 3)
male %>%
head(arrange(desc(bmi)), 3)
# Max
male %>%
arrange(desc(bmi))
head(.,3)
male %>%
arrange(desc(bmi))
head(3)
print(top_3_m)
top_3_m <- male %>%
arrange(desc(bmi))
head(3)
print(top_3_m)
# Max
top_3_m <- male %>%
arrange(desc(bmi))
slice_head(n = 3)
top_3_m <- male %>%
arrange(desc(bmi)) %>%
slice_head(n = 3)
print(top_3_m)
# Min
bottom_3_m <- male %>%
arrange(bmi) %>%
slice_head(n = 3)
print(bottom_3_m)
library(usethis)
use_git()
use_github(organisation="felipeperillareyes")
git log
git status
rlang::last_trace()
rlang::last_trace(drop = FALSE)
git branch
3+3
use_github(organisation="felipeperillareyes")
use_github(organisation="felipeperillareyes")
gitcreds::gitcreds_set(
host = "github.com",
username = "felipeperillareyes",
password = "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"
)
gitcreds::gitcreds_set(
host = "github.com",
username = "felipeperillareyes",
password = "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"
)
